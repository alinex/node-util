0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/bin/npm', 'publish' ]
2 info using npm@2.11.2
3 info using node@v0.10.38
4 verbose node symlink /usr/bin/node
5 verbose publish [ '.' ]
6 silly cache add args [ '.', null ]
7 verbose cache add spec .
8 silly cache add parsed spec { raw: '.',
8 silly cache add   scope: null,
8 silly cache add   name: null,
8 silly cache add   rawSpec: '.',
8 silly cache add   spec: '/home/alex/a3/node-util',
8 silly cache add   type: 'directory' }
9 verbose addLocalDirectory /home/alex/.npm/alinex-util/0.2.2/package.tgz not in flight; packing
10 verbose tar pack [ '/home/alex/.npm/alinex-util/0.2.2/package.tgz',
10 verbose tar pack   '/home/alex/a3/node-util' ]
11 verbose tarball /home/alex/.npm/alinex-util/0.2.2/package.tgz
12 verbose folder /home/alex/a3/node-util
13 info prepublish alinex-util@0.2.2
14 verbose unsafe-perm in lifecycle true
15 verbose addLocalTarball adding from inside cache /home/alex/.npm/alinex-util/0.2.2/package.tgz
16 silly cache afterAdd alinex-util@0.2.2
17 verbose afterAdd /home/alex/.npm/alinex-util/0.2.2/package/package.json not in flight; writing
18 verbose afterAdd /home/alex/.npm/alinex-util/0.2.2/package/package.json written
19 silly publish { name: 'alinex-util',
19 silly publish   version: '0.2.2',
19 silly publish   description: 'Different small helper methods which are generally used',
19 silly publish   copyright: 'Alexander Schilling 2014-2015',
19 silly publish   private: false,
19 silly publish   keywords: [ 'utils', 'helper', 'string', 'object', 'array' ],
19 silly publish   homepage: 'http://alinex.github.io/node-util/',
19 silly publish   repository:
19 silly publish    { type: 'git',
19 silly publish      url: 'git+https://github.com/alinex/node-util.git' },
19 silly publish   bugs: { url: 'https://github.com/alinex/node-util/issues' },
19 silly publish   author:
19 silly publish    { name: 'Alexander Schilling',
19 silly publish      email: 'info@alinex.de',
19 silly publish      url: 'http://alinex.de' },
19 silly publish   contributors: [],
19 silly publish   license: 'Apache-2.0',
19 silly publish   main: './lib/index.js',
19 silly publish   scripts: { prepublish: 'builder -c compile', test: 'builder -c test' },
19 silly publish   directories: { lib: './lib' },
19 silly publish   dependencies: {},
19 silly publish   devDependencies: { 'alinex-builder': '1.x', chai: '3.x' },
19 silly publish   optionalDependencies: {},
19 silly publish   engines: { node: '>=0.10' },
19 silly publish   os: [],
19 silly publish   readme: 'Package: alinex-util\n=================================================\n\n[![Build Status] (https://travis-ci.org/alinex/node-util.svg?branch=master)](https://travis-ci.org/alinex/node-util)\n[![Dependency Status] (https://gemnasium.com/alinex/node-util.png)](https://gemnasium.com/alinex/node-util)\n\nThis module will be used as incubator for different small helper methods which\nare generally used for different general class types:\n\n- string helper\n- number helper\n- array helper\n- object helper\n- may extend the base classes\n\nIt is one of the modules of the [Alinex Universe](http://alinex.github.io/node-alinex)\nfollowing the code standards defined there.\n\n\nInstall\n-------------------------------------------------\n\nThe easiest way is to let npm add the module directly:\n\n``` sh\nnpm install alinex-fs --save\n```\n\n[![NPM](https://nodei.co/npm/alinex-util.png?downloads=true&stars=true)](https://nodei.co/npm/alinex-util/)\n\n\nGeneral Usage\n-------------------------------------------------\n\nAll methods in this package can be called from the resulting function collection:\n\n``` coffee\nutil = require \'alinex-util\'\nstring = util.string # shortcut to the string functions\nobject = util.object # shortcut to the object functions\n```\n\nOr shorter:\n\n``` coffee\n{string,object} = require \'alinex-util\'\narray = require \'alinex-util/lib/array\'\n```\nOr directly import the needed objects with:\n\n``` coffee\nutil = require \'alinex-util\'\nutil.addToPrototype() # will do it for all\nutil.object.addToPrototype() # or extend only the Object class\n```\nOr you may inlcude only the needed types separately:\n\n``` coffee\nx = { eins: 1 }\ny = x.clone() # instead of\ny = util.object.clone x\n```\n\nString type\n-------------------------------------------------\n\n### starts\n\nThis is a handy method to check that a certain string starts with the given\nphrase.\n\n__Arguments:__\n\n* `string` (if not called as String method)\n  text to be checked\n* `literal`\n  phrase to match\n* `start` (optional)\n  offset character position to start looking for\n\n__Returns:__\n\n* `true` if `string` starts with `literal`\n\n__Example:__\n\n``` coffee\nstring = require(\'alinex-util\').string\ntest = \'abcdefg\'\nresult = string.starts test, \'ab\'\n```\nThis results to:\n\n``` coffee\nresult = true\n```\n\nOr the same call using prototype extension:\n\n``` coffee\nrequire(\'alinex-util\').string.addToPrototype()\ntest = \'abcdefg\'\nresult = test.starts \'ab\'\n```\n\n### ends\n\nThis is a handy method to check that a certain string ends with the given\nphrase.\n\n__Arguments:__\n\n* `string` (if not called as String method)\n  text to be checked\n* `literal`\n  phrase to match\n* `back` (optional)\n  offset character position from the end to look for\n\n__Returns:__\n\n* `true` if `string` ends with `literal`\n\n__Example:__\n\n``` coffee\nstring = require(\'alinex-util\').string\ntest = \'abcdefg\'\nresult = string.ends test, \'fg\'\n```\n\nThis results to:\n\n``` coffee\nresult = true\n```\n\nOr the same call using prototype extension:\n\n``` coffee\nrequire(\'alinex-util\').string.addToPrototype()\ntest = \'abcdefg\'\nresult = test.ends \'fg\'\n```\n\n### repeat\n\nRepeat a given string multiple times.\n\n__Arguments:__\n\n* `string` (if not called as String method)\n  text to be repeated\n* `n`\n  number of repeats\n\n__Returns:__\n\n* the repeated test\n\n__Example:__\n\n``` coffee\nstring = require(\'alinex-util\').string\ntest = \'ab\'\nresult = string.repeat test, 3\n```\n\nThis results to:\n\n``` coffee\nresult = \'ababab\'\n```\n\nOr the same call using prototype extension:\n\n``` coffee\nrequire(\'alinex-util\').string.addToPrototype()\ntest = \'ab\'\nresult = test.repeat 3\n```\n\n### lpad\n\nLeft pad string to specified length.\n\n__Arguments:__\n\n* `string`\n   text to be padded\n* `n`\n   final length of text\n* `char`\n   character used for padding (defaults to \' \')\n\n__Returns:__\n\n* the padded text\n\n### rpad\n\nRight pad string to specified length.\n\n__Arguments:__\n\n* `string`\n   text to be padded\n* `n`\n   final length of text\n* `char`\n   character used for padding (defaults to \' \')\n\n__Returns:__\n\n* the padded text\n\n### ucFirst\n\nMake first letter upper case.\n\n__Arguments:__\n\n* `string` (if not called as String method)\n  text to be changed\n\n__Returns:__\n\n* the same text but with first letter in upper case\n\n\n### lcFirst\n\nMake first letter lower case.\n\n__Arguments:__\n\n* `string` (if not called as String method)\n  text to be changed\n\n__Returns:__\n\n* the same text but with first letter in lower case\n\n\n### contains\n\nIs substring contained?\n\n__Arguments:__\n\n* `string`\n  text to be check\n* `phrase`\n  text to be searched for\n\n__Returns:__\n\n* (bool) `true` if phrase is contained in string\n\n\nNumber type\n-------------------------------------------------\n\n### isInteger\n\nCheck for Integer.\n\nThis method will check that the given value is an integer.\n\n__Arguments:__\n\n* `value`\n  to be analyzed\n\n__Returns:__\n\n* `true` if `value` is an integer\n\n### parseInt\n\nStrict parse for Integer.\n\nThis will fail on all strings which are no real integer.\n\n__Arguments:__\n\n* `value`\n  to be analyzed\n\n__Returns:__\n\n* `value` as Number or `NaN`\n\nTo check if you got a number or invalid string use `isNaN()`.\n\n### parseSecond\n\nParse human readable time to seconds.\n\nThis will fail on all strings which are no real integer.\n\n__Arguments:__\n\n* `value`\n  to be analyzed\n\n__Returns:__\n\n* `value` as Number of seconds or `NaN`\n\nTo check if you got a number or invalid string use `isNaN()`.\n\n__Example:__\n\n``` coffee\nnumber.parseSeconds 200          # 200\nnumber.parseSeconds \'200s\'       # 200\nnumber.parseSeconds \'200S\'       # 200\nnumber.parseSeconds \'5m\'         # 300\nnumber.parseSeconds \'1h\'         # 3600\nnumber.parseSeconds \'2.5h\'       # 9000\nnumber.parseSeconds \'1d\'         # 86400\nnumber.parseSeconds \'2h 5m 100s\' # 7600\n```\n\n\nObject\n-------------------------------------------------\n\n### extend\n\nExtend an object with another one.\n\nThis method will extend a given object with the entries from additional\nobjects. Therefore it will do a deep extend.\n\n__Arguments:__\n\n* `object` (if not called as Object method)\n  base object to be extended\n* `extender`...\n  multiple extenders may be given with will be cloned into the object.\n\n__Returns:__\n\n* `object`\n  the given and maybe changed object.\n\n__Example:__\n\n``` coffee\nobject = require(\'alinex-util\').object\ntest = { eins: 1 }\nobject.extend test, { zwei: 2 }, { eins: \'eins\' }, { drei: 3 }\n```\n\nThis results to:\n\n``` coffee\ntest = { eins: \'eins\', zwei: 2, drei: 3 }\n```\n\nOr the same call using prototype extension:\n\n``` coffee\nrequire(\'alinex-util\').object.addToPrototype()\ntest = { eins: 1 }\ntest.extend { zwei: 2 }, { eins: \'eins\' }, { drei: 3 }\n```\n\n\n### clone\n\nDeep cloning of an object.\n\nThis method will create a clone of the given object.\n\n__Arguments:__\n\n* `object` (if not called as Object method)\n  to be cloned\n\n__Returns:__\n\n* `object`\n  clone of the given  object.\n\n__Example:__\n\n``` coffee\nobject = require(\'alinex-util\').object\ntest = { eins: 1 }\nresult = object.clone test\n```\n\nThis results to:\n\n``` coffee\nresult = { eins: 1 }\n```\n\nOr the same call using prototype extension:\n\n``` coffee\nrequire(\'alinex-util\').object.addToPrototype()\ntest = { eins: 1 }\nresult = test.clone()\n```\n\n\n### isempty\n\nCheck if object is empty or uninitialized.\n\n__Arguments:__\n\n* `object`\n  to be checked\n\n__Returns:__\n\n* `boolean`\n  true if object is empty\n\n\nArray object\n-------------------------------------------------\n\n### last\n\nGet the last element.\n\n__Arguments:__\n\n* `array`\n  of elements to work on\n* `back` (optional)\n  offset character position from the end to look for\n\n__Returns:__\n\n* last element value\n\n__Example:__\n\n``` coffee\narray = require(\'alinex-util\').array\ntest = [ 1,2,3,4,5 ]\nresult = array.last test\n```\n\nThis results to:\n\n``` coffee\nresult = 5\n```\n\nOr the same call using prototype extension:\n\n``` coffee\nrequire(\'alinex-util\').array.addToPrototype()\ntest = [ 1,2,3,4,5 ]\nresult = test.last()\n```\n\n### unique\n\nRemove duplicate entries from array.\n\n__Arguments:__\n\n* `array`\n  of elements to work on\n\n__Returns:__\n\n* new array with duplicates removed\n\n__Example:__\n\n``` coffee\narray = require(\'alinex-util\').array\ntest = [ 1,2,2,3,4,1,5 ]\nresult = array.unique test\n```\n\nThis results to:\n\n``` coffee\nresult = [1,2,3,4,5]\n```\n\nOr the same call using prototype extension:\n\n``` coffee\nrequire(\'alinex-util\').array.addToPrototype()\ntest = [ 1,2,2,3,4,1,5 ]\nresult = test.unique\n```\n\n\nLicense\n-------------------------------------------------\n\nCopyright 2014-2015 Alexander Schilling\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n>  <http://www.apache.org/licenses/LICENSE-2.0>\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n',
19 silly publish   readmeFilename: 'README.md',
19 silly publish   gitHead: '0db54e05eb2748b6a7d300e790181b8256118143',
19 silly publish   _id: 'alinex-util@0.2.2',
19 silly publish   _shasum: 'fd9ffd7b5dffe2d7b23cf1a0f4856d74f95b3377',
19 silly publish   _from: '.' }
20 verbose getPublishConfig undefined
21 silly mapToRegistry name alinex-util
22 silly mapToRegistry using default registry
23 silly mapToRegistry registry https://registry.npmjs.org/
24 silly mapToRegistry uri https://registry.npmjs.org/alinex-util
25 verbose publish registryBase https://registry.npmjs.org/
26 silly publish uploading /home/alex/.npm/alinex-util/0.2.2/package.tgz
27 verbose request uri https://registry.npmjs.org/alinex-util
28 verbose request sending authorization for write operation
29 info attempt registry request try #1 at 11:46:17
30 verbose request id 47319e0cf4964fdc
31 http request PUT https://registry.npmjs.org/alinex-util
32 http 403 https://registry.npmjs.org/alinex-util
33 verbose headers { 'content-type': 'application/json',
33 verbose headers   'cache-control': 'max-age=60',
33 verbose headers   'content-length': '95',
33 verbose headers   'accept-ranges': 'bytes',
33 verbose headers   date: 'Mon, 15 Jun 2015 09:46:19 GMT',
33 verbose headers   via: '1.1 varnish',
33 verbose headers   connection: 'keep-alive',
33 verbose headers   'x-served-by': 'cache-lhr6322-LHR',
33 verbose headers   'x-cache': 'MISS',
33 verbose headers   'x-cache-hits': '0',
33 verbose headers   'x-timer': 'S1434361577.942735,VS0,VE1452' }
34 verbose request invalidating /home/alex/.npm/registry.npmjs.org/alinex-util on PUT
35 error publish Failed PUT 403
36 verbose stack Error: "You cannot publish over the previously published version 0.2.2." : alinex-util
36 verbose stack     at CachingRegistryClient.<anonymous> (/usr/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:247:14)
36 verbose stack     at Request._callback (/usr/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:170:14)
36 verbose stack     at Request.self.callback (/usr/lib/node_modules/npm/node_modules/request/request.js:354:22)
36 verbose stack     at Request.emit (events.js:98:17)
36 verbose stack     at Request.<anonymous> (/usr/lib/node_modules/npm/node_modules/request/request.js:1207:14)
36 verbose stack     at Request.emit (events.js:117:20)
36 verbose stack     at IncomingMessage.<anonymous> (/usr/lib/node_modules/npm/node_modules/request/request.js:1153:12)
36 verbose stack     at IncomingMessage.emit (events.js:117:20)
36 verbose stack     at _stream_readable.js:944:16
36 verbose stack     at process._tickCallback (node.js:448:13)
37 verbose statusCode 403
38 verbose pkgid alinex-util
39 verbose cwd /home/alex/a3/node-util
40 error Linux 3.13.0-24-generic
41 error argv "node" "/usr/bin/npm" "publish"
42 error node v0.10.38
43 error npm  v2.11.2
44 error code E403
45 error "You cannot publish over the previously published version 0.2.2." : alinex-util
46 error If you need help, you may report this error at:
46 error     <https://github.com/npm/npm/issues>
47 verbose exit [ 1, true ]
